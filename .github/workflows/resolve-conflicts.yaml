name: Handle pnpm-lock Conflicts

on:
  workflow_dispatch:
    inputs:
      prnumber:
        description: Pull Request number
        type: text
        required: true

jobs:
  resolve-pnpm-lock-conflicts:
    name: Resolve pnpm-lock Conflicts
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup node and pnpm cache
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install packages
        run: pnpm i

      - name: Authenticate with GitHub CLI
        run: |
          gh auth status
          git config --local user.name 'github-actions'
          git config --local user.email 'github-actions@users.noreply.github.com'

      - name: Check if PR has conflicts
        id: has-conflicts
        run: |
          mergeable=$(gh pr view ${{ github.event.inputs.prnumber }} --json mergeable --jq '.mergeable')
          echo $mergeable
          if [[ "$mergeable" == "CONFLICTING" ]]; then
            echo "has_conflicts=true" >> $GITHUB_OUTPUT
          else
            echo "has_conflicts=false" >> $GITHUB_OUTPUT
          fi

      - name: Attempt to resolve conflicts
        if: steps.has-conflicts.outputs.has_conflicts == 'true'
        run: |
          gh pr checkout ${{ github.event.inputs.prnumber }}
          git fetch origin main
          git merge origin/main || true
          git checkout --ours package.json
          node script/resolve-conflicts/merge-package-json.js
        
          git status --short
          if [[ `git status --porcelain` ]]; then
            git add package.json pnpm-lock.yaml
            git commit -m "resolve conflicts in package.json and pnpm-lock.yaml"
          fi
          git push
          

#      - name: Get pnpm-lock.yaml from main branch
#        run: |
#          gh pr checkout ${{ github.event.inputs.prnumber }}
#          git checkout main pnpm-lock.yaml
#          git add pnpm-lock.yaml
#          git status
#          if [[ `git status --porcelain` ]]; then
#            git commit -m 'get pnpm-lock.yaml from main branch'
#          fi
#          git push

#      - name: Check if PR has conflicts
#        id: has-conflicts
#        run: |
#          mergeable=$(gh pr view ${{ github.event.inputs.prnumber }} --json mergeable --jq '.mergeable')
#          echo $mergeable
#          if [[ "$mergeable" == "CONFLICTING" ]]; then
#            echo "has_conflicts=true" >> $GITHUB_OUTPUT
#          else
#            echo "has_conflicts=false" >> $GITHUB_OUTPUT
#          fi
#
#      - name: Checkout to the PR's branch
#        if: steps.has-conflicts.outputs.has_conflicts == 'true'
#        run: gh pr checkout ${{ github.event.inputs.prnumber }}
#
#      - name: Get conflicting files
#        if: steps.has-conflicts.outputs.has_conflicts == 'true'
#        id: conflicting-files
#        run: |
#          git merge origin/main --allow-unrelated-histories || true
#          conflicts=$(git diff --name-only --diff-filter=U)
#          echo $conflicts
#          echo "conflicts=pnpm-lock.yaml" >> $GITHUB_OUTPUT
#
#      - name: Resolve pnpm-lock.yaml conflicts
#        if: contains(steps.conflicting-files.outputs.conflicts, 'pnpm-lock.yaml')
#        run: |
#          git checkout --ours package.json
#          pnpm i --frozen-lockfile=false
#          git add pnpm-lock.yaml
#          git reset HEAD -- ':!pnpm-lock.yaml'
#          git commit -m 'resolve conflicts in pnpm-lock.yaml'
#          git push
