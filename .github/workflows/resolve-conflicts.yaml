name: Handle pnpm-lock Conflicts

on:
  workflow_dispatch:
    inputs:
      prnumber:
        description: Pull Request number
        type: text
        required: true

  push:
    branches: [main]

jobs:
  resolve-pnpm-lock-conflicts-push:
    name: Resolve pnpm-lock Conflicts
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    steps:
      - name: Wait for 1 minute
        if: github.event_name == 'push'
        run: sleep 60

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Authenticate with GitHub CLI
        run: |
          gh auth status
          git config --local user.name 'github-actions'
          git config --local user.email 'github-actions@users.noreply.github.com'

      - name: Grab next in PR in the queue
        id: pr_number
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            pr_number="${{ github.event.inputs.pr_number }}"
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            pr_number=$(gh pr list --state open --label 'READY FOR MERGE' --label 'QUEUED FOR MERGE #1' --json number --jq '.[] | .number')
          fi
  
          if [[ "$pr_number" ]]; then
            echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
          else
            echo "Didn't find PR to resolve conflicts" 
            exit 1
          fi

      - name: Check if PR has conflicts
        id: has-conflicts
        run: |
          mergeable=$(gh pr view ${{ steps.pr_number.outputs.pr_number }} --json mergeable --jq '.mergeable')
          echo $mergeable
          
          if [[ "$mergeable" == "UNKNOWN" ]]; then
            sleep 30
            mergeable=$(gh pr view ${{ steps.pr_number.outputs.pr_number }} --json mergeable --jq '.mergeable')
          fi
          echo $mergeable
          
          if [[ "$mergeable" == "CONFLICTING" ]]; then
            echo "has_conflicts=true" >> $GITHUB_OUTPUT
          else
            echo "has_conflicts=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup pnpm
        if: steps.has-conflicts.outputs.has_conflicts == 'true'
        uses: pnpm/action-setup@v4

      - name: Setup node and pnpm cache
        if: steps.has-conflicts.outputs.has_conflicts == 'true'
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install packages
        if: steps.has-conflicts.outputs.has_conflicts == 'true'
        run: pnpm i

      - name: Attempt to resolve conflicts
        if: steps.has-conflicts.outputs.has_conflicts == 'true'
        run: |
          gh pr checkout ${{ github.event.inputs.prnumber }}
          git fetch origin main
          git merge origin/main || true
          git checkout --ours package.json
          node script/resolve-conflicts/merge-package-json.js
          
          git status --short
          if [[ `git status --porcelain` ]]; then
            git add package.json pnpm-lock.yaml
            git commit -m "resolve conflicts in package.json and pnpm-lock.yaml"
          fi
          git push
