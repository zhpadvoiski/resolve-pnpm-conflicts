name: Handle pnpm-lock Conflicts

on:
  workflow_dispatch:
    inputs:
      prnumber:
        description: Pull Request number
        type: text
        required: true

jobs:
  resolve-pnpm-lock-conflicts:
    name: Resolve pnpm-lock Conflicts
    runs-on: ubuntu-latest
#    env:
#      GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
#        with:
#          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup node and pnpm cache
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Authenticate with GitHub CLI
        run: |
          gh auth login --with-token <<< "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          gh auth status
          git config --local user.name 'github-actions'
          git config --local user.email 'github-actions@users.noreply.github.com'
  

      - name: Check if PR has conflicts
        id: has-conflicts
        run: |
          mergeable=$(gh pr view ${{ github.event.inputs.prnumber }} --json mergeable --jq '.mergeable')
          echo $mergeable
          if [[ "$mergeable" == "CONFLICTING" ]]; then
            echo "has_conflicts=true" >> $GITHUB_OUTPUT
          else
            echo "has_conflicts=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout to the PR's branch
        if: steps.has-conflicts.outputs.has_conflicts == 'true'
        run: gh pr checkout ${{ github.event.inputs.prnumber }}

      - name: Get conflicting files
        if: steps.has-conflicts.outputs.has_conflicts == 'true'
        id: conflicting-files
        run: |
          git merge origin/main --allow-unrelated-histories
          conflicts=$(git diff --name-only --diff-filter=U)
          echo $conflicts
          echo "conflicts=$conflicts" >> $GITHUB_OUTPUT

      - name: Resolve pnpm-lock.yaml conflicts
        run: echo ${{ steps.conflicting-files.outputs.conflicts }}

      - name: Resolve pnpm-lock.yaml conflicts
        if: contains(steps.conflicting-files.outputs.conflicts, 'pnpm-lock.yaml')
        run: |
          pnpm i --frozen-lockfile=false
          git add pnpm-lock.yaml
          git commit -m 'resolve conflicts in pnpm-lock.yaml'
          git push
